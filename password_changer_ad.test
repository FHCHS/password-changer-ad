<?php
// $Id: password_changer_ad.test,v 0.1 2011/01/27 23:28:11 arod Exp $

/**
 * @file
 * Test case for testing the password changer active directory module.
 *
 * This file contatins test case for the password changer active directory module.
 *
 */

//Extends DrupalWebTestCase to get database connection
class PasswordChangerADAdminCase extends DrupalWebTestCase  {


  public static function getInfo() {
    return array(
      'name' => 'Active Directory Password Changer Submodule - Configuration',
      'description' => 'Test active directory password changer configuration pages.',
      'group' => 'Password Changer',
    );
  }
  
  function setUp() {
    parent::setUp('password_changer_api', 'password_changer_ad');
    
     //Create user and login
    $this->admin_user = $this->drupalCreateUser(array('administer password changer','access administration pages'));
    $this->drupalLogin($this->admin_user);

  }
  
    // Test Case 1.1 
  function testPasswordChangerADAccessHelp() {
   
  
    //Access help page
    $this->drupalGet('admin/help/password_changer_ad');
    $this->assertResponse(200, t('Access help page successfully.'));
    $this->assertText(t('Password Changer for Microsoft Active Directory'), t('Page title is Password Changer for Active Directory.'));
    
  }

  // Test Case 1.2
  function testPasswordChangerADAccessConfiguration() {
    
    //Access configuration page
    $this->drupalGet('admin/config/password_changer/password_changer_ad');
    $this->assertResponse(200, t('Access active directory password changer settings page successfully.'));
    $this->assertText(t('Password Changer Active Directory Settings'), t('Page title is Password Changer Active Directory Settings'));
    
  }
  
  //Test Case 1.3, 1.4, 1.5, 1.6
  function testPasswordChangerADAddSettings() {
    
    
    //Test Case 1.3
    $rid = $this->drupalCreateRole(array(), 'test_role');
    
    //Create role
    
    $this->drupalPost('admin/config/password_changer/password_changer_ad',
                       array('domain_controllers' => 'www.example.com',
                             'role' => $rid,
                             'base_dn' => 'DC=WWW,DC=EXAMPLE,DC=COM',
                             'account_suffix' => '@www.example.cm',
                             'ad_username' => 'testuser',
                             'ad_password' => 'test123', ), t('Save Settings'));
    
    
    //Test Case 1.4

    //Create role
    $rid = $this->drupalCreateRole(array(),'Employees');
    
    
    $this->drupalPost('admin/config/password_changer/password_changer_ad',
                       array('domain_controllers' => 'www.example1.com', ),
                       t('Save Settings'));
    
    $this->assertText('Base DN: field is required.','Base DN value is missing.');
    
    $this->assertText('Account Suffix: field is required.','Account Suffix value is missing.');
    
    $this->assertText('Active Directory User Name: field is required.','Active Directory User Name value is missing.');
    
    $this->assertText('Active Directory user password: field is required.','Active Directory User password value is missing.'); 
    
   
    //Test Case 1.5
    
     $this->drupalPost('admin/config/password_changer/password_changer_ad',
                       array( ), t('Save Settings'));
     
    $this->assertText('Active Directory Domain Controllers: field is required.','Active directory domain controller value is missing.'); 
    
    $this->assertText('Base DN: field is required.','Base DN value is missing.');
    
    $this->assertText('Account Suffix: field is required.','Account Suffix value is missing.');
    
    $this->assertText('Active Directory User Name: field is required.','Active Directory User Name value is missing.');
    
    $this->assertText('Active Directory user password: field is required.','Active Directory User password value is missing.'); 
     
    
  }
  
   //Test Case 1.7
  function testPasswordChangerADUpdateSetting() {
    

    $rid = $this->drupalCreateRole(array(), 'UNIVERSAL STUDENTS');
    
    //Create role    
     $this->drupalPost('admin/config/password_changer/password_changer_ad',
                       array('domain_controllers' => 'www.example.com',
                             'role' => $rid,
                             'base_dn' => 'DC=WWW,DC=EXAMPLE,DC=COM',
                             'account_suffix' => '@www.example.cm',
                             'ad_username' => 'testuser',
                             'ad_password' => 'test123', ), t('Save Settings'));
     
    
    //Check if update link is present
    $this->assertRaw(l('Update','admin/config/password_changer/password_changer_ad/update/0'),
                       'Update link is present for the link is present.');
    
    
    //Update record 
    $this->drupalPost('admin/config/password_changer/password_changer_ad/update/0',
                       array('domain_controllers' => 'www.example1.com',
                             'role' => $rid,
                             'base_dn' => 'DC=WWW,DC=EXAMPLE1,DC=COM',
                             'account_suffix' => '@www.example1.cm',
                             'ad_username' => 'testuser',
                             'ad_password' => 'test123', ), t('Save Settings'));
    
    //Check if the update took effect 
    $this->assertText('www.example1.com','Record has been updated.');
    

  }
  
    //Test Case 1.7
  function testPasswordChangerADRemoveSetting() {

    //Create role
    $rid = $this->drupalCreateRole(array(), 'UNIVERSAL STUDENTS');
    
    //Add new setting record    
    $this->drupalPost('admin/config/password_changer/password_changer_ad',
                       array('domain_controllers' => 'www.example.com',
                             'role' => $rid,
                             'base_dn' => 'DC=WWW,DC=EXAMPLE,DC=COM',
                             'account_suffix' => '@www.example.cm',
                             'ad_username' => 'testuser',
                             'ad_password' => 'test123', ), t('Save Settings'));
    
    //Check if delete link is presents
    $this->assertRaw(l('Remove','admin/config/password_changer/password_changer_ad/remove/0'),
                       'Remove link is present for the link is present.');
    
    //Get confirmation page
    $this->drupalGet('admin/config/password_changer/password_changer_ad/remove/0');
    $this->assertResponse(200, t('Access registration page successfully.'));
    $this->assertText('Are you sure you want to delete this active directory setting?', 'Delete confirmation page.');
    
    //Delete record
    $this->drupalPost('admin/config/password_changer/password_changer_ad/remove/0',array(),t('Delete'));
    $this->assertNoRaw(l('Remove','admin/config/password_changer/password_changer_ad/remove/0'),
                       'Remove link is present for the link is present.');
  }
}


//Test Case 2 
//Extends DrupalWebTestCase to get database connection
class PasswordChangerADUserCase extends DrupalWebTestCase  {


  public static function getInfo() {
    return array(
      'name' => 'Active Directory Password Changer Submodule - Module',
      'description' => 'Test active directory password changer from the user perspective, change password.',
      'group' => 'Password Changer',
    );
  }
  //Including modules that needed for the test case
  function setUp() {
    parent::setUp('password_changer_api', 'password_changer_ad');
    
  }
  
  function testPasswordChangerADChangePasswordOptionForUser()
  {
     //Create admin with access to admin pages
    $this->admin_user = $this->drupalCreateUser(array('administer password changer'));
 
    
    //Test Case 2.1
    //Create student_test user
    
    //Create Role
    $rid = $this->drupalCreateRole(array('access comments', 'access content', 'post comments', 'change own username','administer password changer'),
                                       'UNIVERSAL STUDENTS');
  
    //Set user values
    $edit['name']   = 'student_test';
    $edit['mail']   = 'student_test' . '@example.com';
    $edit['roles']  = array($rid => $rid);
    $edit['pass']   = 'test34';
    $edit['status'] = 1;
    //Creat user
    $account = user_save('', $edit);
    $account->pass_raw = $edit['pass'];
    $this->student_test = $account;   
    
    $this->assertTrue(!empty($account->uid), t('User created with name %name and pass %pass', array('%name' => $edit['name'], '%pass' => $edit['pass'])), t('User login'));
    
   
    //Test Case 2.2 
    //Add new setting record    
    $this->drupalPost('admin/config/password_changer/password_changer_ad',
                       array('domain_controllers' => 'fhcvmdc06.students.fhchs.edu',
                             'role' => $rid,
                             'base_dn' => 'DC=STUDENTS,DC=FHCHS,DC=EDU',
                             'account_suffix' => '@STUDENTS.FHCHS.EDU',
                             'ad_username' => 'studentpasschanger',
                             'ad_password' => 'p4ssword!', ), t('Save Settings'));
    
    $this->assertText('fhcvmdc06.students.fhchs.edu','Setting for Domain student.fhchs.edu is created.');
    
    
     //Test Case 2.3
    $this->drupalLogin($this->student_test);
    
    $this->drupalGet('user/' . $this->student_test->uid . '/edit');
    $this->assertResponse(200, t('Able to reach the user %name and  profile page.', array('%name' => $this->student_test->name)));
    $this->assertText('Microsoft Active Directory','Option to change password in Microsoft Active Directory.');
    
  }
  
}

